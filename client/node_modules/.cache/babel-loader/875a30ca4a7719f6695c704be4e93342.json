{"ast":null,"code":"import _slicedToArray from \"/Users/andrewrice/Desktop/helpful_human_color/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewrice/Desktop/helpful_human_color/client/src/components/colorswatch.js\";\nimport React, { useState, useEffect } from 'react';\nimport Pagination from './Pagination';\nimport axios from 'axios';\nimport ColorCard from \"./ColorCard\";\nimport Wrapper from './Wrapper';\nimport Col from 'react-bootstrap/Col';\nimport Container from '../Container';\nimport Row from 'react-bootstrap/Row';\nimport '../App.css';\n\nconst ColorSwatch = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        colors = _useState2[0],\n        setColors = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentPage = _useState6[0],\n        setCurrentPage = _useState6[1];\n\n  const _useState7 = useState(12),\n        _useState8 = _slicedToArray(_useState7, 1),\n        colorsPerPage = _useState8[0];\n\n  useEffect(() => {\n    const fetchColors = async () => {\n      setLoading(true);\n      const res = await axios.get('api/colors');\n      setColors(res.data);\n      setLoading(false);\n    };\n\n    fetchColors();\n  }, []); // Get current colors\n\n  const indexOfLastColor = currentPage * colorsPerPage;\n  const indexOfFirstColor = indexOfLastColor - colorsPerPage;\n  const currentColors = colors.slice(indexOfFirstColor, indexOfLastColor); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"justify-content-md-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(ColorCard, {\n    colors: currentColors,\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Pagination, {\n    colorsPerPage: colorsPerPage,\n    totalColors: colors.length,\n    paginate: paginate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n};\n\nexport default ColorSwatch;","map":{"version":3,"sources":["/Users/andrewrice/Desktop/helpful_human_color/client/src/components/colorswatch.js"],"names":["React","useState","useEffect","Pagination","axios","ColorCard","Wrapper","Col","Container","Row","ColorSwatch","colors","setColors","loading","setLoading","currentPage","setCurrentPage","colorsPerPage","fetchColors","res","get","data","indexOfLastColor","indexOfFirstColor","currentColors","slice","paginate","pageNumber","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAO,YAAP;;AAIA,MAAMC,WAAW,GAAG,MAAM;AAAA,oBACMT,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,QACfU,MADe;AAAA,QACPC,SADO;;AAAA,qBAEQX,QAAQ,CAAC,KAAD,CAFhB;AAAA;AAAA,QAEfY,OAFe;AAAA,QAENC,UAFM;;AAAA,qBAGgBb,QAAQ,CAAC,CAAD,CAHxB;AAAA;AAAA,QAGfc,WAHe;AAAA,QAGFC,cAHE;;AAAA,qBAIEf,QAAQ,CAAC,EAAD,CAJV;AAAA;AAAA,QAIfgB,aAJe;;AAOtBf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,WAAW,GAAG,YAAY;AAC9BJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMK,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,YAAV,CAAlB;AACAR,MAAAA,SAAS,CAACO,GAAG,CAACE,IAAL,CAAT;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALD;;AAOAI,IAAAA,WAAW;AACd,GATQ,EASN,EATM,CAAT,CAPsB,CAmBtB;;AACA,QAAMI,gBAAgB,GAAGP,WAAW,GAAGE,aAAvC;AACA,QAAMM,iBAAiB,GAAGD,gBAAgB,GAAGL,aAA7C;AACA,QAAMO,aAAa,GAAGb,MAAM,CAACc,KAAP,CAAaF,iBAAb,EAAgCD,gBAAhC,CAAtB,CAtBsB,CAwBtB;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAIX,cAAc,CAACW,UAAD,CAA7C;;AAGI,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,MAAM,EAAIH,aADd;AAEI,IAAA,OAAO,EAAGX,OAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADL,CADJ,CAFR,CADA,EAgBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AACA,IAAA,aAAa,EAAEI,aADf;AAEA,IAAA,WAAW,EAAEN,MAAM,CAACiB,MAFpB;AAGA,IAAA,QAAQ,EAAEF,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAhBD,CADH;AA0BP,CAtDD;;AAyDA,eAAehB,WAAf","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport Pagination from './Pagination'\nimport axios from 'axios';\nimport ColorCard from \"./ColorCard\";\nimport Wrapper from './Wrapper';\nimport Col from 'react-bootstrap/Col';\nimport Container from '../Container';\nimport Row from 'react-bootstrap/Row';\nimport '../App.css';\n\n\n\nconst ColorSwatch = () => {\n    const [colors, setColors] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [colorsPerPage] = useState(12)\n\n    \n    useEffect(() => {\n        const fetchColors = async () => {\n          setLoading(true);\n          const res = await axios.get('api/colors');\n          setColors(res.data);\n          setLoading(false);\n        };\n        \n        fetchColors();\n    }, []);\n\n    \n    // Get current colors\n    const indexOfLastColor = currentPage * colorsPerPage;\n    const indexOfFirstColor = indexOfLastColor - colorsPerPage;\n    const currentColors = colors.slice(indexOfFirstColor, indexOfLastColor);\n\n    // Change page\n    const paginate = pageNumber => setCurrentPage(pageNumber);    \n    \n    \n        return (\n           <div>\n           <div>\n               \n                   <Container className=\"container\">\n                       <Row className=\"justify-content-md-center\">\n                            <Col xs={6} md={4}>\n                                <ColorCard\n                                    colors = {currentColors}\n                                    loading ={loading}\n                                />\n                                \n                            </Col>\n                        </Row>\n                    </Container>\n                \n            </div>\n            <div>\n                <Pagination\n                colorsPerPage={colorsPerPage}\n                totalColors={colors.length}\n                paginate={paginate}\n                /> \n            </div> \n            </div>  \n        )\n}\n\n\nexport default ColorSwatch;\n"]},"metadata":{},"sourceType":"module"}