{"ast":null,"code":"import _slicedToArray from \"/Users/andrewrice/Desktop/helpful_human_color/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewrice/Desktop/helpful_human_color/client/src/components/colorswatch.js\";\nimport React, { useState, useEffect } from 'react';\nimport Pagination from './Pagination';\nimport axios from 'axios';\nimport ColorCard from \"./ColorCard\";\nimport Container from '../Container';\nimport Row from 'react-bootstrap/Row';\nimport Column from '../Column';\nimport SideBar from './SideBar';\nimport '../App.css';\n\nconst ColorSwatch = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        colors = _useState2[0],\n        setColors = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentPage = _useState6[0],\n        setCurrentPage = _useState6[1];\n\n  const _useState7 = useState(104),\n        _useState8 = _slicedToArray(_useState7, 1),\n        colorsPerPage = _useState8[0];\n\n  useEffect(() => {\n    const fetchColors = async () => {\n      setLoading(true);\n      const res = await axios.get('api/colors');\n      setColors(res.data);\n      setLoading(false);\n    };\n\n    fetchColors();\n  }, []); // Get current colors\n\n  const indexOfLastColor = currentPage * colorsPerPage;\n  const indexOfFirstColor = indexOfLastColor - colorsPerPage;\n  const currentColors = colors.slice(indexOfFirstColor, indexOfLastColor); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Container, {\n    style: {\n      backgroundColor: 'grey'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Column, {\n    size: \"md-3 sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(SideBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))), React.createElement(ColorCard, {\n    colors: currentColors,\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Row, {\n    style: {\n      justifyContent: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Pagination, {\n    colorsPerPage: colorsPerPage,\n    totalColors: colors.length,\n    paginate: paginate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \" \"))));\n};\n\nexport default ColorSwatch;","map":{"version":3,"sources":["/Users/andrewrice/Desktop/helpful_human_color/client/src/components/colorswatch.js"],"names":["React","useState","useEffect","Pagination","axios","ColorCard","Container","Row","Column","SideBar","ColorSwatch","colors","setColors","loading","setLoading","currentPage","setCurrentPage","colorsPerPage","fetchColors","res","get","data","indexOfLastColor","indexOfFirstColor","currentColors","slice","paginate","pageNumber","backgroundColor","justifyContent","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,YAAP;;AAIA,MAAMC,WAAW,GAAG,MAAM;AAAA,oBACMT,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,QACfU,MADe;AAAA,QACPC,SADO;;AAAA,qBAEQX,QAAQ,CAAC,KAAD,CAFhB;AAAA;AAAA,QAEfY,OAFe;AAAA,QAENC,UAFM;;AAAA,qBAGgBb,QAAQ,CAAC,CAAD,CAHxB;AAAA;AAAA,QAGfc,WAHe;AAAA,QAGFC,cAHE;;AAAA,qBAIEf,QAAQ,CAAC,GAAD,CAJV;AAAA;AAAA,QAIfgB,aAJe;;AAOtBf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,WAAW,GAAG,YAAY;AAC9BJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMK,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,YAAV,CAAlB;AACAR,MAAAA,SAAS,CAACO,GAAG,CAACE,IAAL,CAAT;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALD;;AAOAI,IAAAA,WAAW;AACd,GATQ,EASN,EATM,CAAT,CAPsB,CAmBtB;;AACA,QAAMI,gBAAgB,GAAGP,WAAW,GAAGE,aAAvC;AACA,QAAMM,iBAAiB,GAAGD,gBAAgB,GAAGL,aAA7C;AACA,QAAMO,aAAa,GAAGb,MAAM,CAACc,KAAP,CAAaF,iBAAb,EAAgCD,gBAAhC,CAAtB,CAtBsB,CAwBtB;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAIX,cAAc,CAACW,UAAD,CAA7C;;AAGI,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAC;AAAjB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADJ,CAHA,EAQA,oBAAC,SAAD;AACI,IAAA,MAAM,EAAIJ,aADd;AAEI,IAAA,OAAO,EAAGX,OAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARA,CADD,EAcH,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAACgB,MAAAA,cAAc,EAAC;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AACI,IAAA,aAAa,EAAEZ,aADnB;AAEI,IAAA,WAAW,EAAEN,MAAM,CAACmB,MAFxB;AAGI,IAAA,QAAQ,EAAEJ,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CAFR,CAdG,CADH;AA4BP,CAxDD;;AA2DA,eAAehB,WAAf","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport Pagination from './Pagination'\nimport axios from 'axios';\nimport ColorCard from \"./ColorCard\";\nimport Container from '../Container';\nimport Row from 'react-bootstrap/Row';\nimport Column from '../Column';\nimport SideBar from './SideBar';\nimport '../App.css';\n\n\n\nconst ColorSwatch = () => {\n    const [colors, setColors] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [colorsPerPage] = useState(104)\n\n    \n    useEffect(() => {\n        const fetchColors = async () => {\n          setLoading(true);\n          const res = await axios.get('api/colors');\n          setColors(res.data);\n          setLoading(false);\n        };\n        \n        fetchColors();\n    }, []);\n\n    \n    // Get current colors\n    const indexOfLastColor = currentPage * colorsPerPage;\n    const indexOfFirstColor = indexOfLastColor - colorsPerPage;\n    const currentColors = colors.slice(indexOfFirstColor, indexOfLastColor);\n\n    // Change page\n    const paginate = pageNumber => setCurrentPage(pageNumber);    \n    \n    \n        return (\n           <div> \n            <Container style={{backgroundColor:'grey'}}>\n            \n           \n            <Row>\n                <Column size=\"md-3 sm-6\">\n                  <SideBar/>\n                </Column>\n            </Row>\n            <ColorCard\n                colors = {currentColors}\n                loading ={loading}>\n            </ColorCard>\n            </Container>\n        <Container>\n            \n                <Row style={{justifyContent:'right'}}>\n                    <Pagination\n                        colorsPerPage={colorsPerPage}\n                        totalColors={colors.length}\n                        paginate={paginate}\n                    > </Pagination>\n                </Row>\n            \n        </Container>\n        </div>     \n        );\n}\n\n\nexport default ColorSwatch;\n"]},"metadata":{},"sourceType":"module"}