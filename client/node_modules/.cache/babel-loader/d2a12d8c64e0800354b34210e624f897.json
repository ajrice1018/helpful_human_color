{"ast":null,"code":"var _jsxFileName = \"/Users/andrewrice/Desktop/helpful_human_color/client/src/components/colorswatch.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactPaginate from 'react-paginate';\nimport Container from \"../Container\";\nimport ColorCard from \".//ColorCard\";\nimport Row from \"../Row\";\nimport Column from \"../Column\";\nimport Wrapper from \"./Wrapper\";\n\nclass ColorSwatch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      colors: [],\n      offset: 0\n    };\n\n    this.handlePageClick = colors => {\n      let selected = colors.selected;\n      let offset = Math.ceil(selected * this.props.perPage);\n      this.setState({\n        offset: offset\n      }, () => {\n        this.getColors();\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getColors();\n  }\n\n  getColors() {\n    fetch('/api/colors', {\n      method: 'GET'\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      this.setState({\n        colors: data,\n        pageCount: Math.ceil(colors.meta.total_count / colors.meta.limit)\n      });\n    }).catch(err => {\n      console.log('error' + err);\n    });\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.colors.map(color => React.createElement(Column, {\n      size: \"md-3 sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(ColorCard, {\n      key: color.key,\n      color: color.color,\n      hex: color.hex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nColorSwatch.propTypes = {\n  colors: PropTypes.array.isRequired,\n  perPage: PropTypes.number.isRequired\n};\nexport default ColorSwatch;","map":{"version":3,"sources":["/Users/andrewrice/Desktop/helpful_human_color/client/src/components/colorswatch.js"],"names":["React","Component","PropTypes","ReactPaginate","Container","ColorCard","Row","Column","Wrapper","ColorSwatch","state","colors","offset","handlePageClick","selected","Math","ceil","props","perPage","setState","getColors","componentDidMount","fetch","method","then","response","json","data","pageCount","meta","total_count","limit","catch","err","console","log","render","map","color","key","hex","propTypes","array","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,WAAN,SAA0BR,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAM/BS,KAN+B,GAMzB;AACFC,MAAAA,MAAM,EAAC,EADL;AAEFC,MAAAA,MAAM,EAAC;AAFL,KANyB;;AAAA,SA8B/BC,eA9B+B,GA8BbF,MAAM,IAAI;AACxB,UAAIG,QAAQ,GAAGH,MAAM,CAACG,QAAtB;AACA,UAAIF,MAAM,GAAGG,IAAI,CAACC,IAAL,CAAUF,QAAQ,GAAG,KAAKG,KAAL,CAAWC,OAAhC,CAAb;AAEA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,MAAM,EAAEA;AAAV,OAAd,EAAkC,MAAM;AACtC,aAAKQ,SAAL;AACD,OAFD;AAGD,KArC4B;AAAA;;AAW/BC,EAAAA,iBAAiB,GAAE;AACf,SAAKD,SAAL;AACH;;AAEDA,EAAAA,SAAS,GAAE;AACPE,IAAAA,KAAK,CAAC,aAAD,EAAe;AAChBC,MAAAA,MAAM,EAAE;AADQ,KAAf,CAAL,CAEGC,IAFH,CAEQC,QAAQ,IAAG;AAAE,aAAOA,QAAQ,CAACC,IAAT,EAAP;AAAuB,KAF5C,EAGCF,IAHD,CAGMG,IAAI,IAAG;AACT,WAAKR,QAAL,CAAc;AACVR,QAAAA,MAAM,EAAEgB,IADE;AAEVC,QAAAA,SAAS,EAAEb,IAAI,CAACC,IAAL,CAAUL,MAAM,CAACkB,IAAP,CAAYC,WAAZ,GAAwBnB,MAAM,CAACkB,IAAP,CAAYE,KAA9C;AAFD,OAAd;AAKH,KATD,EASGC,KATH,CASSC,GAAG,IAAG;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUF,GAAtB;AACH,KAXD;AAYH;;AAWDG,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK1B,KAAL,CAAWC,MAAX,CAAkB0B,GAAlB,CAAsBC,KAAK,IAC5B,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,GAAG,EAAIA,KAAK,CAACC,GADjB;AAEI,MAAA,KAAK,EAAED,KAAK,CAACA,KAFjB;AAGI,MAAA,GAAG,EAAEA,KAAK,CAACE,GAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADC,CADL,CADJ,CADJ,CADJ;AAmBH;;AA3D8B;;AAA7B/B,W,CACKgC,S,GAAY;AACf9B,EAAAA,MAAM,EAAET,SAAS,CAACwC,KAAV,CAAgBC,UADT;AAEfzB,EAAAA,OAAO,EAAEhB,SAAS,CAAC0C,MAAV,CAAiBD;AAFX,C;AA6DvB,eAAelC,WAAf","sourcesContent":["import React, { Component }  from 'react';\nimport PropTypes from 'prop-types';\nimport ReactPaginate from 'react-paginate';\nimport Container from \"../Container\";\nimport ColorCard from \".//ColorCard\";\nimport Row from \"../Row\";\nimport Column from \"../Column\";\nimport Wrapper from \"./Wrapper\";\n\n\nclass ColorSwatch extends Component{\n    static propTypes = {\n        colors: PropTypes.array.isRequired,\n        perPage: PropTypes.number.isRequired,\n      };\n    \n    state={\n        colors:[],\n        offset:0\n    };\n\n    componentDidMount(){\n        this.getColors();\n    }\n\n    getColors(){\n        fetch('/api/colors',{\n            method: 'GET'\n        }).then(response =>{ return response.json()})\n        .then(data =>{\n            this.setState({\n                colors: data,\n                pageCount: Math.ceil(colors.meta.total_count/colors.meta.limit)\n            })\n            \n        }).catch(err =>{\n            console.log('error' + err)\n        })\n    }\n\n    handlePageClick = colors => {\n        let selected = colors.selected;\n        let offset = Math.ceil(selected * this.props.perPage);\n    \n        this.setState({ offset: offset }, () => {\n          this.getColors();\n        });\n      };\n    \n    render(){\n        return (\n            <Wrapper>\n                <Container>\n                    <Row>\n                        {this.state.colors.map(color => (\n                        <Column size=\"md-3 sm-6\">\n                            <ColorCard\n                                key = {color.key}\n                                color={color.color}\n                                hex={color.hex}\n                                />\n                            \n                        </Column>\n                        ))}\n                        \n                    </Row>\n                </Container>\n            </Wrapper>\n        )\n    }\n}\n\nexport default ColorSwatch;\n"]},"metadata":{},"sourceType":"module"}