{"ast":null,"code":"import _slicedToArray from \"/Users/andrewrice/Desktop/helpful_human_color/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewrice/Desktop/helpful_human_color/client/src/components/colorswatch.js\";\nimport React, { useState, useEffect } from 'react';\nimport Container from \"../Container\";\nimport axios from 'axios';\nimport ColorCard from \".//ColorCard\";\nimport Row from \"../Row\";\nimport Column from \"../Column\";\nimport Wrapper from \"./Wrapper\";\n\nconst ColorSwatch = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        colors = _useState2[0],\n        setColors = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentPage = _useState6[0],\n        setCurrentPage = _useState6[1];\n\n  const _useState7 = useState(12),\n        _useState8 = _slicedToArray(_useState7, 2),\n        postsPerPage = _useState8[0],\n        setPostsPerPage = _useState8[1];\n\n  useEffect(() => {\n    const fetchColors = async () => {\n      setLoading(true);\n      const res = await axios.get('api/colors');\n      setColors(res.data);\n      setLoading(false);\n    };\n\n    fetchColors();\n  }, []);\n  console.log(colors); // Get current colors\n\n  const indexOfLastColor = currentPage * colorsPerPage;\n  const indexOfFirstColor = indexOfLastColor - colorsPerPage;\n  const currentColors = colors.slice(indexOfFirstColor, indexOfLastColor); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, this.state.colors.map(color => React.createElement(Column, {\n    size: \"md-3 sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(ColorCard, {\n    colors: currentColors,\n    key: color.key,\n    color: color.color,\n    hex: color.hex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))))));\n};\n\nexport default ColorSwatch;","map":{"version":3,"sources":["/Users/andrewrice/Desktop/helpful_human_color/client/src/components/colorswatch.js"],"names":["React","useState","useEffect","Container","axios","ColorCard","Row","Column","Wrapper","ColorSwatch","colors","setColors","loading","setLoading","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","fetchColors","res","get","data","console","log","indexOfLastColor","colorsPerPage","indexOfFirstColor","currentColors","slice","paginate","pageNumber","state","map","color","key","hex"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA,oBACMR,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,QACfS,MADe;AAAA,QACPC,SADO;;AAAA,qBAEQV,QAAQ,CAAC,KAAD,CAFhB;AAAA;AAAA,QAEfW,OAFe;AAAA,QAENC,UAFM;;AAAA,qBAGgBZ,QAAQ,CAAC,CAAD,CAHxB;AAAA;AAAA,QAGfa,WAHe;AAAA,QAGFC,cAHE;;AAAA,qBAIkBd,QAAQ,CAAC,EAAD,CAJ1B;AAAA;AAAA,QAIfe,YAJe;AAAA,QAIDC,eAJC;;AAOtBf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,WAAW,GAAG,YAAY;AAC9BL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMM,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,YAAV,CAAlB;AACAT,MAAAA,SAAS,CAACQ,GAAG,CAACE,IAAL,CAAT;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALD;;AAOAK,IAAAA,WAAW;AACd,GATQ,EASN,EATM,CAAT;AAWAI,EAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ,EAlBsB,CAmBtB;;AACA,QAAMc,gBAAgB,GAAGV,WAAW,GAAGW,aAAvC;AACA,QAAMC,iBAAiB,GAAGF,gBAAgB,GAAGC,aAA7C;AACA,QAAME,aAAa,GAAGjB,MAAM,CAACkB,KAAP,CAAaF,iBAAb,EAAgCF,gBAAhC,CAAtB,CAtBsB,CAwBtB;;AACA,QAAMK,QAAQ,GAAGC,UAAU,IAAIf,cAAc,CAACe,UAAD,CAA7C;;AAGI,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,KAAKC,KAAL,CAAWrB,MAAX,CAAkBsB,GAAlB,CAAsBC,KAAK,IAC5B,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AACI,IAAA,MAAM,EAAIN,aADd;AAEI,IAAA,GAAG,EAAIM,KAAK,CAACC,GAFjB;AAGI,IAAA,KAAK,EAAED,KAAK,CAACA,KAHjB;AAII,IAAA,GAAG,EAAEA,KAAK,CAACE,GAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADC,CADL,CADJ,CADJ,CADJ;AAkBP,CA9CD;;AAiDA,eAAe1B,WAAf","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport Container from \"../Container\";\nimport axios from 'axios';\nimport ColorCard from \".//ColorCard\";\nimport Row from \"../Row\";\nimport Column from \"../Column\";\nimport Wrapper from \"./Wrapper\";\n\n\nconst ColorSwatch = () => {\n    const [colors, setColors] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [postsPerPage, setPostsPerPage] = useState(12)\n\n    \n    useEffect(() => {\n        const fetchColors = async () => {\n          setLoading(true);\n          const res = await axios.get('api/colors');\n          setColors(res.data);\n          setLoading(false);\n        };\n        \n        fetchColors();\n    }, []);\n\n    console.log(colors);\n    // Get current colors\n    const indexOfLastColor = currentPage * colorsPerPage;\n    const indexOfFirstColor = indexOfLastColor - colorsPerPage;\n    const currentColors = colors.slice(indexOfFirstColor, indexOfLastColor);\n\n    // Change page\n    const paginate = pageNumber => setCurrentPage(pageNumber);    \n    \n    \n        return (\n            <Wrapper>\n                <Container>\n                    <Row>\n                        {this.state.colors.map(color => (\n                        <Column size=\"md-3 sm-6\">\n                        <ColorCard\n                            colors = {currentColors}\n                            key = {color.key}\n                            color={color.color}\n                            hex={color.hex}\n                            />\n                        </Column>\n                        ))}\n                    </Row>\n                </Container>\n            </Wrapper>\n        )\n}\n\n\nexport default ColorSwatch;\n"]},"metadata":{},"sourceType":"module"}