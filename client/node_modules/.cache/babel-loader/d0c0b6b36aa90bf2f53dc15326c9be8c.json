{"ast":null,"code":"var _jsxFileName = \"/Users/andrewrice/Desktop/helpful_human_color/client/src/components/colorswatch.js\";\nimport React, { Component } from 'react';\nimport Container from \"../Container\";\nimport ColorCard from \".//ColorCard\";\nimport ReactPaginate from 'react-paginate';\nimport PropTypes from 'prop-types';\nimport Row from \"../Row\";\nimport Column from \"../Column\";\nimport Wrapper from \"./Wrapper\";\n\nclass ColorSwatch extends Component {\n  // static propTypes = {\n  //     colors: PropTypes.array.isRequired,\n  //     perPage: PropTypes.number.isRequired\n  // }\n  constructor(props) {\n    super(props);\n    state = {\n      colors: [],\n      offset: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getColors();\n  }\n\n  getColors() {\n    fetch('/api/colors', {\n      method: 'GET'\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      this.setState({\n        colors: data\n      });\n    }).catch(err => {\n      console.log('error' + err);\n    });\n  } // handlePageClick = data => {\n  //     let selected = data.selected;\n  //     let offset = Math.ceil(selected * this.props.perPage);\n  //     this.setState({ offset: offset }, () => {\n  //       this.getColors();\n  //     });\n  //   };\n\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.colors.map(color => React.createElement(Column, {\n      size: \"md-3 sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(ColorCard, {\n      key: color.key,\n      color: color.color,\n      hex: color.hex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default ColorSwatch;","map":{"version":3,"sources":["/Users/andrewrice/Desktop/helpful_human_color/client/src/components/colorswatch.js"],"names":["React","Component","Container","ColorCard","ReactPaginate","PropTypes","Row","Column","Wrapper","ColorSwatch","constructor","props","state","colors","offset","componentDidMount","getColors","fetch","method","then","response","json","data","setState","catch","err","console","log","render","map","color","key","hex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,WAAN,SAA0BR,SAA1B,CAAmC;AAC/B;AACA;AACA;AACA;AACAS,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEAC,IAAAA,KAAK,GAAC;AACFC,MAAAA,MAAM,EAAC,EADL;AAEFC,MAAAA,MAAM,EAAE;AAFN,KAAN;AAIH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,SAAL;AACH;;AAEDA,EAAAA,SAAS,GAAE;AACPC,IAAAA,KAAK,CAAC,aAAD,EAAe;AAChBC,MAAAA,MAAM,EAAE;AADQ,KAAf,CAAL,CAEGC,IAFH,CAEQC,QAAQ,IAAG;AAAE,aAAOA,QAAQ,CAACC,IAAT,EAAP;AAAuB,KAF5C,EAGCF,IAHD,CAGMG,IAAI,IAAG;AACT,WAAKC,QAAL,CAAc;AACVV,QAAAA,MAAM,EAAES;AADE,OAAd;AAIH,KARD,EAQGE,KARH,CAQSC,GAAG,IAAG;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUF,GAAtB;AACH,KAVD;AAWH,GA7B8B,CA+B/B;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGAG,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKhB,KAAL,CAAWC,MAAX,CAAkBgB,GAAlB,CAAsBC,KAAK,IAC5B,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AACI,MAAA,GAAG,EAAIA,KAAK,CAACC,GADjB;AAEI,MAAA,KAAK,EAAED,KAAK,CAACA,KAFjB;AAGI,MAAA,GAAG,EAAEA,KAAK,CAACE,GAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADC,CADL,CADJ,CADJ,CADJ;AA8BH;;AAxE8B;;AA2EnC,eAAevB,WAAf","sourcesContent":["import React, { Component }  from 'react';\nimport Container from \"../Container\";\nimport ColorCard from \".//ColorCard\";\nimport ReactPaginate from 'react-paginate';\nimport PropTypes from 'prop-types'\nimport Row from \"../Row\";\nimport Column from \"../Column\";\nimport Wrapper from \"./Wrapper\";\n\n\nclass ColorSwatch extends Component{\n    // static propTypes = {\n    //     colors: PropTypes.array.isRequired,\n    //     perPage: PropTypes.number.isRequired\n    // }\n    constructor(props){\n        super(props);\n\n        state={\n            colors:[],\n            offset: 0\n        };\n    }\n    componentDidMount(){\n        this.getColors();\n    }\n\n    getColors(){\n        fetch('/api/colors',{\n            method: 'GET'\n        }).then(response =>{ return response.json()})\n        .then(data =>{\n            this.setState({\n                colors: data\n            })\n            \n        }).catch(err =>{\n            console.log('error' + err)\n        })\n    }\n\n    // handlePageClick = data => {\n    //     let selected = data.selected;\n    //     let offset = Math.ceil(selected * this.props.perPage);\n    \n    //     this.setState({ offset: offset }, () => {\n    //       this.getColors();\n    //     });\n    //   };\n\n    \n    render(){\n        return (\n            <Wrapper>\n                <Container>\n                    <Row>\n                        {this.state.colors.map(color => (\n                        <Column size=\"md-3 sm-6\">\n                        <ColorCard\n                            key = {color.key}\n                            color={color.color}\n                            hex={color.hex}\n                            />\n                        {/* <ReactPaginate\n                            previousLabel={'previous'}\n                            nextLabel={'next'}\n                            breakLabel={'...'}\n                            breakClassName={'break-me'}\n                            pageCount={this.state.pageCount}\n                            marginPagesDisplayed={2}\n                            pageRangeDisplayed={5}\n                            onPageChange={this.handlePageClick}\n                            containerClassName={'pagination'}\n                            subContainerClassName={'pages pagination'}\n                            activeClassName={'active'}\n                        /> */}\n                        </Column>\n                        ))}\n                    </Row>\n                </Container>\n            </Wrapper>\n        )\n    }\n}\n\nexport default ColorSwatch;\n"]},"metadata":{},"sourceType":"module"}