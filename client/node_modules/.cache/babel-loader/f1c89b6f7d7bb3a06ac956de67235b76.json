{"ast":null,"code":"import _slicedToArray from \"/Users/andrewrice/Desktop/helpful_human_color/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewrice/Desktop/helpful_human_color/client/src/components/colorswatch.js\";\nimport React, { useState, useEffect } from 'react';\nimport Pagination from './Pagination';\nimport axios from 'axios';\nimport ColorCard from \"./ColorCard\";\nimport Container from '../Container';\nimport Row from 'react-bootstrap/Row';\nimport Column from '../Column';\nimport SideBar from './SideBar';\nimport ColorModal from './ColorModal/ColorModal.js';\nimport '../App.css';\n\nconst ColorSwatch = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 3),\n        colors = _useState2[0],\n        setColors = _useState2[1],\n        setSingleColor = _useState2[2];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentPage = _useState6[0],\n        setCurrentPage = _useState6[1];\n\n  const _useState7 = useState(104),\n        _useState8 = _slicedToArray(_useState7, 1),\n        colorsPerPage = _useState8[0];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        show = _useState10[0],\n        setShow = _useState10[1];\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    const fetchColors = async () => {\n      setLoading(true);\n      const res = await axios.get('api/colors');\n      setColors(res.data);\n      setLoading(false);\n    };\n\n    fetchColors();\n  }, []);\n\n  const singleColor = colors => {\n    console.log(colors);\n  }; // Get current colors\n\n\n  const indexOfLastColor = currentPage * colorsPerPage;\n  const indexOfFirstColor = indexOfLastColor - colorsPerPage;\n  const currentColors = colors.slice(indexOfFirstColor, indexOfLastColor); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"randomNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Column, {\n    style: {\n      backgroundColor: 'grey'\n    },\n    size: \"md-3 sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(SideBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))), React.createElement(Row, {\n    style: {\n      justifyContent: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(ColorCard, {\n    onClick: handleShow,\n    colors: currentColors,\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Row, {\n    style: {\n      justifyContent: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Pagination, {\n    colorsPerPage: colorsPerPage,\n    totalColors: colors.length,\n    paginate: paginate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \" \"))), React.createElement(ColorModal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }));\n};\n\nexport default ColorSwatch;","map":{"version":3,"sources":["/Users/andrewrice/Desktop/helpful_human_color/client/src/components/colorswatch.js"],"names":["React","useState","useEffect","Pagination","axios","ColorCard","Container","Row","Column","SideBar","ColorModal","ColorSwatch","colors","setColors","setSingleColor","loading","setLoading","currentPage","setCurrentPage","colorsPerPage","show","setShow","handleClose","handleShow","fetchColors","res","get","data","singleColor","console","log","indexOfLastColor","indexOfFirstColor","currentColors","slice","paginate","pageNumber","backgroundColor","justifyContent","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport Pagination from './Pagination'\nimport axios from 'axios';\nimport ColorCard from \"./ColorCard\";\nimport Container from '../Container';\nimport Row from 'react-bootstrap/Row';\nimport Column from '../Column';\nimport SideBar from './SideBar';\nimport ColorModal from './ColorModal/ColorModal.js';\nimport '../App.css';\n\n\n\n\nconst ColorSwatch = () => {\n    const [colors, setColors, setSingleColor] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [colorsPerPage] = useState(104)\n    const[show, setShow] = useState(false);\n    \n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    \n    useEffect(() => {\n        const fetchColors = async () => {\n          setLoading(true);\n          const res = await axios.get('api/colors');\n          setColors(res.data);\n          setLoading(false);\n        };\n        \n        fetchColors();\n    }, []);\n\n    const singleColor= (colors) => {\n        console.log(colors);\n    };\n\n    \n    // Get current colors\n    const indexOfLastColor = currentPage * colorsPerPage;\n    const indexOfFirstColor = indexOfLastColor - colorsPerPage;\n    const currentColors = colors.slice(indexOfFirstColor, indexOfLastColor);\n\n    \n    \n\n    // Change page\n    const paginate = pageNumber => setCurrentPage(pageNumber);    \n    \n    \n        return (\n           <div> \n            \n            <Container  >\n            \n           \n                <Row className='randomNumber'>\n                    <Column  style={{backgroundColor:'grey'}} size=\"md-3 sm-6\">\n                        <SideBar/>\n                    </Column>\n                </Row>\n                \n                <Row style={{justifyContent:'right'}}>\n                    <ColorCard\n                        \n                        onClick={handleShow}\n                        colors = {currentColors}\n                        loading ={loading}>\n                    </ColorCard>\n                </Row>\n            </Container>\n            \n            <Container>\n            \n                <Row style={{justifyContent:'right'}}>\n                    <Pagination\n                        colorsPerPage={colorsPerPage}\n                        totalColors={colors.length}\n                        paginate={paginate}\n                    > </Pagination>\n                </Row>\n            \n        </Container>\n            \n            <ColorModal \n                show={show} \n                onHide={handleClose}\n                \n            />\n\n        </div>     \n        );\n}\n\n\nexport default ColorSwatch;\n"]},"metadata":{},"sourceType":"module"}