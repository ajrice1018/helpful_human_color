{"ast":null,"code":"import _slicedToArray from \"/Users/andrewrice/Desktop/helpful_human_color/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewrice/Desktop/helpful_human_color/client/src/components/ColorCard/ColorCard.js\";\nimport React, { useState } from \"react\";\nimport \"./ColorCard.css\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"../../Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst ColorCard = ({\n  colors,\n  loading\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  if (loading) {\n    return React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Loading....\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Row, {\n    style: {\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, colors.map(color => React.createElement(Card, {\n    onClick: handleShow,\n    style: {\n      backgroundColor: color.hex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    style: {\n      backgroundColor: \"#FFFFFF\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, color.hex))))), colors.map(color => React.createElement(Modal, {\n    show: (show, color.hex),\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, color.color)), React.createElement(Card, {\n    style: {\n      backgroundColor: color.hex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Close\")))));\n};\n\nexport default ColorCard;","map":{"version":3,"sources":["/Users/andrewrice/Desktop/helpful_human_color/client/src/components/ColorCard/ColorCard.js"],"names":["React","useState","Card","Row","Container","Button","Modal","ColorCard","colors","loading","show","setShow","handleClose","handleShow","justifyContent","map","color","backgroundColor","hex"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,iBAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAuB;AAAA,oBACdR,QAAQ,CAAC,KAAD,CADM;AAAA;AAAA,QAC/BS,IAD+B;AAAA,QACzBC,OADyB;;AAGrC,QAAMC,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AAEA,MAAGF,OAAH,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;;AAID,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAACK,MAAAA,cAAc,EAAC;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEON,MAAM,CAACO,GAAP,CAAWC,KAAK,IAEf,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEH,UAAf;AAA2B,IAAA,KAAK,EAAE;AAACI,MAAAA,eAAe,EAACD,KAAK,CAACE;AAAvB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE;AAACD,MAAAA,eAAe,EAAE;AAAlB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDD,KAAK,CAACE,GAA1D,CADF,CAFD,CAFP,CADF,CADA,EAeCV,MAAM,CAACO,GAAP,CAAWC,KAAK,IAEf,oBAAC,KAAD;AAAO,IAAA,IAAI,GAAEN,IAAI,EAAEM,KAAK,CAACE,GAAd,CAAX;AAA8B,IAAA,MAAM,EAAEN,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcI,KAAK,CAACA,KAApB,CADF,CADF,EAIE,oBAAC,IAAD;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAACD,KAAK,CAACE;AAAvB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEN,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CALF,CAFD,CAfD,CADF;AAkCH,CA9CD;;AAgDA,eAAeL,SAAf","sourcesContent":["import React, {useState} from \"react\";\nimport \"./ColorCard.css\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"../../Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\"\n\n\nconst ColorCard = ({colors, loading}) => {\n    const[show, setShow] = useState(false);\n    \n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    if(loading){\n      return <h2>Loading....</h2>\n    }\n    \n    \n\n    return (\n      <div>\n      <Container>\n        <Row style={{justifyContent:'center'}}>\n          \n              {colors.map(color=>(\n                   \n                <Card onClick={handleShow} style={{backgroundColor:color.hex}} >\n                  <Card.Header style={{backgroundColor: \"#FFFFFF\" }}>{color.hex}</Card.Header>\n                </Card>\n                \n              ))}\n          \n        </Row>\n      </Container>\n      \n      {colors.map(color => (\n        \n        <Modal show={show, color.hex} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>{color.color}</Modal.Title>\n          </Modal.Header>\n          <Card  style={{backgroundColor:color.hex}}></Card>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      ))}\n        \n        </div>\n    );\n    \n};\n\nexport default ColorCard;"]},"metadata":{},"sourceType":"module"}