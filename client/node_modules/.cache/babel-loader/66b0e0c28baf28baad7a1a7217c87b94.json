{"ast":null,"code":"var _jsxFileName = \"/Users/andrewrice/Desktop/helpful_human_color/client/src/components/colorswatch.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Pagination from './Pagination';\nimport Container from \"../Container\";\nimport ColorCard from \".//ColorCard\";\nimport Row from \"../Row\";\nimport Column from \"../Column\";\nimport Wrapper from \"./Wrapper\";\n\nclass ColorSwatch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allColors: [],\n      currentColors: [],\n      currentPage: null,\n      totalPages: null\n    };\n\n    this.onPageChanged = data => {\n      const currentPage = data.currentPage,\n            totalPages = data.totalPages,\n            pageLimit = data.pageLimit;\n      axios.get(\"/api/colors?page=\".concat(currentPage, \"&limit\").concat(pageLimit)).then(response => {\n        const currentColors = response.data.colors;\n        this.setState({\n          currentPage,\n          currentColors,\n          totalPages\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    // this.getColors();\n    this.onPageChanged();\n  } // getColors(){\n  //     fetch('/api/colors',{\n  //         method: 'GET'\n  //     }).then(response =>{ return response.json()})\n  //     .then(data =>{\n  //         this.setState({\n  //             colors: data,\n  //         })\n  //     }).catch(err =>{\n  //         console.log('error' + err)\n  //     })\n  // }\n\n\n  render() {\n    const _this$state = this.state,\n          allColors = _this$state.allColors,\n          currentColors = _this$state.currentColors,\n          currentPage = _this$state.currentPage,\n          totalPages = _this$state.totalPages;\n    const totalColors = allColors.length;\n    if (totalColors === 0) return null;\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, currentPage && React.createElement(\"span\", {\n      className: \"current-page d-inline-block h-100 pl-4 text-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Page \", React.createElement(\"span\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, currentPage), \" / \", React.createElement(\"span\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, totalPages)), React.createElement(\"div\", {\n      className: \"d-flex flex-row py-4 align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      totalRecords: totalColors,\n      pageLimit: 12,\n      pageNeighbours: 1,\n      onPageChanged: this.onPageChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, currentColors.map(color => React.createElement(Column, {\n      size: \"md-3 sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(ColorCard, {\n      key: color.key,\n      color: color.color,\n      hex: color.hex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default ColorSwatch;","map":{"version":3,"sources":["/Users/andrewrice/Desktop/helpful_human_color/client/src/components/colorswatch.js"],"names":["React","Component","axios","Pagination","Container","ColorCard","Row","Column","Wrapper","ColorSwatch","state","allColors","currentColors","currentPage","totalPages","onPageChanged","data","pageLimit","get","then","response","colors","setState","componentDidMount","render","totalColors","length","map","color","key","hex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,WAAN,SAA0BR,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAG/BS,KAH+B,GAGzB;AACFC,MAAAA,SAAS,EAAE,EADT;AAEFC,MAAAA,aAAa,EAAC,EAFZ;AAGFC,MAAAA,WAAW,EAAE,IAHX;AAIFC,MAAAA,UAAU,EAAC;AAJT,KAHyB;;AAAA,SAgC/BC,aAhC+B,GAgCfC,IAAI,IAAG;AAAA,YACXH,WADW,GAC4BG,IAD5B,CACXH,WADW;AAAA,YACEC,UADF,GAC4BE,IAD5B,CACEF,UADF;AAAA,YACcG,SADd,GAC4BD,IAD5B,CACcC,SADd;AAGnBf,MAAAA,KAAK,CAACgB,GAAN,4BAA8BL,WAA9B,mBAAkDI,SAAlD,GACKE,IADL,CACUC,QAAQ,IAAI;AACd,cAAMR,aAAa,GAAGQ,QAAQ,CAACJ,IAAT,CAAcK,MAApC;AACA,aAAKC,QAAL,CAAc;AAAET,UAAAA,WAAF;AAAeD,UAAAA,aAAf;AAA8BE,UAAAA;AAA9B,SAAd;AACH,OAJL;AAKH,KAxC8B;AAAA;;AAU/BS,EAAAA,iBAAiB,GAAE;AACf;AACA,SAAKR,aAAL;AACH,GAb8B,CAe/B;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;AAYAS,EAAAA,MAAM,GAAE;AAAA,wBAEmD,KAAKd,KAFxD;AAAA,UAEDC,SAFC,eAEDA,SAFC;AAAA,UAEUC,aAFV,eAEUA,aAFV;AAAA,UAEyBC,WAFzB,eAEyBA,WAFzB;AAAA,UAEqCC,UAFrC,eAEqCA,UAFrC;AAGR,UAAMW,WAAW,GAAGd,SAAS,CAACe,MAA9B;AAEA,QAAGD,WAAW,KAAK,CAAnB,EAAsB,OAAO,IAAP;AAElB,WACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEMZ,WAAW,IACT;AAAM,MAAA,SAAS,EAAC,uDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACK;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCA,WAArC,CADL,SACiE;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCC,UAArC,CADjE,CAHR,EAQI;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAEW,WAA1B;AAAuC,MAAA,SAAS,EAAE,EAAlD;AAAsD,MAAA,cAAc,EAAE,CAAtE;AAAyE,MAAA,aAAa,EAAE,KAAKV,aAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARJ,EAWI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,aAAa,CAACe,GAAd,CAAkBC,KAAK,IACxB,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,GAAG,EAAIA,KAAK,CAACC,GADjB;AAEI,MAAA,KAAK,EAAED,KAAK,CAACA,KAFjB;AAGI,MAAA,GAAG,EAAEA,KAAK,CAACE,GAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADC,CADL,CAXJ,CADJ,CADJ;AA6BH;;AA9E8B;;AAiFnC,eAAerB,WAAf","sourcesContent":["import React, { Component }  from 'react';\nimport axios from 'axios'\nimport Pagination from './Pagination';\nimport Container from \"../Container\";\nimport ColorCard from \".//ColorCard\";\nimport Row from \"../Row\";\nimport Column from \"../Column\";\nimport Wrapper from \"./Wrapper\";\n\n\nclass ColorSwatch extends Component{\n    \n    \n    state={\n        allColors: [],\n        currentColors:[],\n        currentPage: null,\n        totalPages:null,\n    };\n\n    componentDidMount(){\n        // this.getColors();\n        this.onPageChanged();\n    }\n\n    // getColors(){\n        \n        \n    //     fetch('/api/colors',{\n    //         method: 'GET'\n    //     }).then(response =>{ return response.json()})\n    //     .then(data =>{\n    //         this.setState({\n    //             colors: data,\n                \n    //         })\n            \n    //     }).catch(err =>{\n    //         console.log('error' + err)\n    //     })\n    // }\n\n    onPageChanged = data =>{\n        const { currentPage, totalPages, pageLimit } = data;\n\n        axios.get(`/api/colors?page=${currentPage}&limit${pageLimit}`)\n            .then(response => {\n                const currentColors = response.data.colors;\n                this.setState({ currentPage, currentColors, totalPages });\n            });\n    }\n    \n    render(){\n\n    const {allColors, currentColors, currentPage,totalPages} = this.state;\n    const totalColors = allColors.length\n\n    if(totalColors === 0) return null\n\n        return (\n            <Wrapper>\n                <Container>\n                    \n                    { currentPage && (\n                        <span className=\"current-page d-inline-block h-100 pl-4 text-secondary\">\n                        Page <span className=\"font-weight-bold\">{ currentPage }</span> / <span className=\"font-weight-bold\">{ totalPages }</span>\n                        </span>\n                    )}\n                    \n                    <div className=\"d-flex flex-row py-4 align-items-center\">\n                        <Pagination totalRecords={totalColors} pageLimit={12} pageNeighbours={1} onPageChanged={this.onPageChanged} />\n                    </div>\n                    <Row>\n                        {currentColors.map(color => (\n                        <Column size=\"md-3 sm-6\">\n                            <ColorCard\n                                key = {color.key}\n                                color={color.color}\n                                hex={color.hex}\n                                />\n                            \n                        </Column>\n                        ))}\n                        \n                    </Row>\n                </Container>\n            </Wrapper>\n        )\n    }\n}\n\nexport default ColorSwatch;\n"]},"metadata":{},"sourceType":"module"}